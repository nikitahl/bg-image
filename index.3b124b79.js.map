{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["(function () {\n  const body = document.body;\n  const form = document.querySelector('.bg-image-form');\n  const bgSizeInput = document.querySelector('.bg-size-input');\n  const bgPositionInput = document.querySelector('.bg-position-input');\n  const imageContainer = document.querySelector('.image-container');\n  const imageWidth = document.querySelector('.image-width');\n  const imageHeight = document.querySelector('.image-height');\n  const getCodeBtn = document.querySelector('.get-code');\n  const code = document.querySelector('.code');\n  const closeCode = document.querySelector('.code-close');\n  const fullStyle = document.querySelector('.full-style');\n  const shortStyle = document.querySelector('.short-style');\n  const copyButtons = document.querySelectorAll('.btn--copy');\n\n  const bgValues = {\n    color: '#999999',\n    image: 'bg-image.jpg',\n    position: 'left top',\n    size: 'contains',\n    repeat: 'repeat',\n    origin: 'padding-box'\n  }\n\n  let rawCode = ''\n  let rawShorthandCode = ''\n\n  function setImageSize () {\n    const imageContainerRect = imageContainer.getBoundingClientRect();\n    imageWidth.innerText = imageContainerRect.width;\n    imageHeight.innerText = imageContainerRect.height;\n  }\n\n  function getImgData(target, name) {\n    const files = target.files[0];\n    if (files) {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(files);\n      fileReader.addEventListener(\"load\", function () {\n        body.style.setProperty(name, `url(${this.result})`);\n        const propName = name.slice(5);\n        bgValues[propName] = files.name;\n      });    \n    }\n  }\n\n  function handleFormChange (e) {\n    let { name, value, type } = e.target;\n    const propName = name.slice(5);\n    if (name === '--bg-image') {\n      getImgData(e.target, name);\n    } else {\n      if (name === '--bg-position') {\n        value = value.split('-').join(' ');\n      }\n\n      if (name === '--bg-size') {\n        if (value === 'custom') {\n          bgSizeInput.classList.remove('hidden');\n          value = getComputedStyle(imageContainer).backgroundSize;\n        } else if (value !== 'custom' && !bgSizeInput.classList.contains('hidden') && type !== 'text') {\n          bgSizeInput.classList.add('hidden');\n        } else if (type === 'text') {\n          // TODO update validation\n          if (!['px', '%', 'em', 'rem', 'pt', 'pc'].find(unit => value.includes(unit))) {\n            value = `${value}px`;\n          }\n        }\n      }\n\n      if (name === '--bg-position') {\n        if (value === 'custom') {\n          bgPositionInput.classList.remove('hidden');\n          value = getComputedStyle(imageContainer).backgroundPosition;\n        } else if (value !== 'custom' && !bgPositionInput.classList.contains('hidden') && type !== 'text') {\n          bgPositionInput.classList.add('hidden');\n        } else if (type === 'text') {\n          // TODO update validation\n          if (!['px', '%', 'em', 'rem', 'pt', 'pc'].find(unit => value.includes(unit))) {\n            value = `${value}px`;\n          }\n        }\n      }\n      body.style.setProperty(name, value);\n      bgValues[propName] = value;\n    }\n    copyButtons.forEach((button) => {\n      button.innerText = 'Copy';\n    });\n  }\n\n  function imageResizeHandler (entries) {\n    for (let entry of entries) {\n      setImageSize();\n    }\n  }\n\n  function closeCodeModal (e) {\n    if (!e.target.closest('.code') || e.target.classList.contains('code-close')) {\n      code.classList.add('hidden');\n      body.classList.remove('modal-opened');\n      closeCode.removeEventListener('click', closeCodeModal);\n      body.removeEventListener('click', closeCodeModal);\n    }\n  }\n\n  function openCodeModal (e) {\n    generateCode();\n    fullStyle.innerText = rawCode;\n    shortStyle.innerText = rawShorthandCode;\n    code.classList.remove('hidden');\n    body.classList.add('modal-opened');\n    closeCode.addEventListener('click', closeCodeModal);\n    setTimeout(function () {\n      body.addEventListener('click', closeCodeModal);\n    }, 0);\n  }\n\n  function generateCode () {\n    rawCode = `.bg-image {\n  background-color: ${bgValues.color};\n  background-image: url(\"${bgValues.image}\");\n  background-position: ${bgValues.position};\n  background-size: ${bgValues.size};\n  background-repeat: ${bgValues.repeat};\n  background-origin: ${bgValues.origin};\n}\n`;\n    rawShorthandCode = `.bg-image {\n  background: ${bgValues.color} url(\"${bgValues.image}\") ${bgValues.position} ${bgValues.size} ${bgValues.repeat} ${bgValues.origin};\n}`;\n  }\n\n  function handleCopyToClipboard (e) {\n    let code;\n    if (e.target.classList.contains('copy-full')) {\n      code = rawCode;\n      e.target.innerText = 'Copied';\n    } else {\n      code = rawShorthandCode;\n      e.target.innerText = 'Copied';\n    }\n    navigator.clipboard.writeText(code);\n  }\n   \n  const resizeObserver = new ResizeObserver(imageResizeHandler);\n  resizeObserver.observe(imageContainer);\n  form.addEventListener('change', handleFormChange);\n  getCodeBtn.addEventListener('click', openCodeModal);\n\n  copyButtons.forEach((button) => {\n    button.addEventListener('click', handleCopyToClipboard);\n  });\n})();"],"names":["body","document","form","querySelector","bgSizeInput","bgPositionInput","imageContainer","imageWidth","imageHeight","getCodeBtn","code","closeCode","fullStyle","shortStyle","copyButtons","querySelectorAll","bgValues","color","image","position","size","repeat","origin","rawCode","rawShorthandCode","setImageSize","imageContainerRect","getBoundingClientRect","innerText","width","height","closeCodeModal","e","target","closest","classList","contains","add","remove","removeEventListener","handleCopyToClipboard","entries","entry","name","value","type","propName","slice","files","fileReader","FileReader","readAsDataURL","addEventListener","style","setProperty","this","result","getImgData","split","join","getComputedStyle","backgroundSize","find","unit","includes","backgroundPosition","forEach","button","setTimeout"],"version":3,"file":"index.3b124b79.js.map"}